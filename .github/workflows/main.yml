name: MainWorkflow

on:
  push:
    branches:
      - master

jobs:
  Build:
    runs-on: self-hosted

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Set environment variables
        run: |
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV

      - name: Build with Maven
        run: ./mvnw clean install -DskipTests

      - name: Test with Maven
        run: ./mvnw test

#      - name: Sonar coverage
#        run: ./mvnw sonar:sonar -Pcoverage -Dsonar.host.url=https://sonarcloud.io


      - name: Build Docker image
        run: docker build  -t ${{ secrets.DOCKER_USERNAME }}/croyale-game-service:0.0.4 .

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/croyale-game-service:0.0.4

  Sonar:
    runs-on: self-hosted
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          run: ./mvnw -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=CRoyale-Game-Service -Dsonar.projectName='CRoyale-Game-Service'


#  Docker:
#    needs: Build
#    runs-on: self-hosted
#
#    steps:
